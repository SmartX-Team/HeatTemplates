heat_template_version: 2013-05-23

description: >
  An example Heat Orchestration Template (HOT).
  WordPress is web software you can use to create a beautiful website
  or blog. This template installs two instances: one running a
  WordPress deployment and the other using a local MySQL database to
  store the data.

parameters:

  key_name:
    type: string
    description: Name of a KeyPair to enable SSH access to the instance
    default: test_key

  instance_type:
    type: string
    description: Instance type for web and DB servers
    default: m1.small
    constraints:
      - allowed_values: [m1.tiny, m1.small, m1.medium, m1.large, m1.xlarge]
        description: instance_type must be a valid instance type

  image_id:
    type: string
    description: >
      Name or ID of the image to use for the WordPress server.
      Recommended values are fedora-20.i386 or fedora-20.x86_64;
      get them from http://cloud.fedoraproject.org/fedora-20.i386.qcow2
      or http://cloud.fedoraproject.org/fedora-20.x86_64.qcow2 .
    default: fedora-20.x86_64

  image_id_2:
    type: string
    description: >
      Name or ID of the image to use for the MariaSQL server.
    default: ubuntu 16.04

  db_name:
    type: string
    description: WordPress database name
    default: wordpress
    constraints:
      - length: { min: 1, max: 64 }
        description: db_name must be between 1 and 64 characters
      - allowed_pattern: '[a-zA-Z][a-zA-Z0-9]*'
        description: >
          db_name must begin with a letter and contain only alphanumeric
          characters

  db_username:
    type: string
    description: The WordPress database admin account username
    default: admin
    hidden: true
    constraints:
      - length: { min: 1, max: 16 }
        description: db_username must be between 1 and 16 characters
      - allowed_pattern: '[a-zA-Z][a-zA-Z0-9]*'
        description: >
          db_username must begin with a letter and contain only alphanumeric
          characters

  db_password:
    type: string
    description: The WordPress database admin account password
    default: admin
    hidden: true
    constraints:
      - length: { min: 1, max: 41 }
        description: db_password must be between 1 and 41 characters
      - allowed_pattern: '[a-zA-Z0-9]*'
        description: db_password must contain only alphanumeric characters

  db_root_password:
    type: string
    description: Root password for MySQL
    default: admin
    hidden: true
    constraints:
      - length: { min: 1, max: 41 }
        description: db_root_password must be between 1 and 41 characters
      - allowed_pattern: '[a-zA-Z0-9]*'
        description: db_root_password must contain only alphanumeric characters

  public_net_id:
      type: string
      description: ID of public network for which floating IP addresses will be allocated

  private_net_id:
      type: string
      description: ID of private network into which servers get deployed

  private_subnet_id:
      type: string
      description: ID of private sub network into which servers get deployed

resources:
  DatabaseServer:
    type: OS::Nova::Server
    properties:
      image: { get_param: image_id_2 }
      flavor: { get_param: instance_type }
      key_name: { get_param: key_name }
      networks:
          - port: { get_resource: DatabaseServer_port }
      user_data:
        str_replace:
          template: |
            #!/bin/bash -v

            tee -a /etc/default/locale <<EOF
            LANGUAGE="en_US.UTF8"
            LC_ALL="en_US.UTF8"
            LC_CTYPE="en_US.UTF8"
            EOF

            export LANGUAGE="en_US.UTF8"
            export LC_ALL="en_US.UTF8"
            export LC_CTYPE="en_US.UTF8"

            apt-get update
            apt-get -y upgrade
            apt-get -y install mariadb-server

            service mysql start

            tee -a /etc/mysql/my.cnf <<EOF

            [mysqld]
            bind-address = 0.0.0.0
            EOF

            # I know this looks stupid, but MariaDB just doesn't detect the changed my.cnf unless it's done this way.
            # It must be run first and restarted again.
            service mysql restart

            # touch /var/log/mariadb/mariadb.log
            # chown mysql.mysql /var/log/mariadb/mariadb.log

            # Setup MySQL root password and create a user
            mysqladmin -u root password db_rootpassword
            cat << EOF | mysql -u root --password=db_rootpassword
            CREATE DATABASE db_name;
            GRANT ALL PRIVILEGES ON db_name.* TO "db_user"@"%"
            IDENTIFIED BY "db_password";
            FLUSH PRIVILEGES;
            EXIT
            EOF
          params:
            db_rootpassword: { get_param: db_root_password }
            db_name: { get_param: db_name }
            db_user: { get_param: db_username }
            db_password: { get_param: db_password }

  DatabaseServer_port:
      type: OS::Neutron::Port
      properties:
          network_id : { get_param: private_net_id }
          fixed_ips:
              - subnet_id: { get_param: private_subnet_id }
          security_groups: [{get_resource: DatabaseServer_security_group }]

  DatabaseServer_security_group:
      type: OS::Neutron::SecurityGroup
      properties:
          description: Add security group rules for DatabaseServer
          name: security-group-db
          rules:
            - remote_ip_prefix: 0.0.0.0/0
              protocol: tcp
              port_range_min: 22
              port_range_max: 22
            - remote_ip_prefix: 0.0.0.0/0
              protocol: icmp
            - remote_ip_prefix: 0.0.0.0/0
              protocol: tcp
              port_range_min: 3306
              port_range_max: 3306

  WebServer:
    type: OS::Nova::Server
    properties:
      image: { get_param: image_id }
      flavor: { get_param: instance_type }
      key_name: { get_param: key_name }
      networks:
          - port: { get_resource: WebServer_port }
      user_data:
        str_replace:
          template: |
            #!/bin/bash -v

            yum -y install httpd wordpress

            sed -i "/Deny from All/d" /etc/httpd/conf.d/wordpress.conf
            sed -i "s/Require local/Require all granted/" /etc/httpd/conf.d/wordpress.conf
            sed -i s/database_name_here/db_name/ /etc/wordpress/wp-config.php
            sed -i s/username_here/db_user/      /etc/wordpress/wp-config.php
            sed -i s/password_here/db_password/  /etc/wordpress/wp-config.php
            sed -i s/localhost/db_ipaddr/        /etc/wordpress/wp-config.php
            setenforce 0 # Otherwise net traffic with DB is disabled
            systemctl start httpd.service
          params:
            db_rootpassword: { get_param: db_root_password }
            db_name: { get_param: db_name }
            db_user: { get_param: db_username }
            db_password: { get_param: db_password }
            db_ipaddr: { get_attr: [DatabaseServer, networks, private, 0] }

  WebServer_port:
      type: OS::Neutron::Port
      properties:
          network_id : { get_param: private_net_id }
          fixed_ips:
              - subnet_id: { get_param: private_subnet_id }
          security_groups: [{get_resource: WebServer_security_group }]

  WebServer_floating_ip:
      type: OS::Neutron::FloatingIP
      properties:
        floating_network_id: { get_param: public_net_id }
        port_id: { get_resource: WebServer_port }

  WebServer_security_group:
      type: OS::Neutron::SecurityGroup
      properties:
          description: Add security group rules for WebServer
          name: security-group-web
          rules:
            - remote_ip_prefix: 0.0.0.0/0
              protocol: tcp
              port_range_min: 22
              port_range_max: 22
            - remote_ip_prefix: 0.0.0.0/0
              protocol: icmp
            - remote_ip_prefix: 0.0.0.0/0
              protocol: tcp
              port_range_min: 80
              port_range_max: 80

outputs:
  WebsiteURL:
    description: URL for Wordpress wiki
    value:
      str_replace:
        template: http://host/wordpress
        params:
          host: { get_attr: [WebServer_floating_ip, floating_ip_address] }
