heat_template_version: 2013-05-23

description: >
  An example Heat Orchestration Template (HOT).
  WordPress is web software you can use to create a beautiful website
  or blog. This template installs two instances: one running a
  WordPress deployment and the other using a local MySQL database to
  store the data.

parameters:

  key_name:
    type: string
    description: Name of a KeyPair to enable SSH access to the instance
    default: test_key

  instance_type:
    type: string
    description: Instance type for web and DB servers
    default: m1.small
    constraints:
      - allowed_values: [m1.tiny, m1.small, m1.medium, m1.large, m1.xlarge]
        description: instance_type must be a valid instance type

  image_id:
    type: string
    description: >
      Name or ID of the image to use for the MariaSQL server.
    default: ubuntu 16.04

  db_name:
    type: string
    description: WordPress database name
    default: wordpress
    constraints:
      - length: { min: 1, max: 64 }
        description: db_name must be between 1 and 64 characters
      - allowed_pattern: '[a-zA-Z][a-zA-Z0-9]*'
        description: >
          db_name must begin with a letter and contain only alphanumeric
          characters

  db_username:
    type: string
    description: The WordPress database admin account username
    default: admin
    hidden: true
    constraints:
      - length: { min: 1, max: 16 }
        description: db_username must be between 1 and 16 characters
      - allowed_pattern: '[a-zA-Z][a-zA-Z0-9]*'
        description: >
          db_username must begin with a letter and contain only alphanumeric
          characters

  db_password:
    type: string
    description: The WordPress database admin account password
    default: admin
    hidden: true
    constraints:
      - length: { min: 1, max: 41 }
        description: db_password must be between 1 and 41 characters
      - allowed_pattern: '[a-zA-Z0-9]*'
        description: db_password must contain only alphanumeric characters

  db_root_password:
    type: string
    description: Root password for MySQL
    default: admin
    hidden: true
    constraints:
      - length: { min: 1, max: 41 }
        description: db_root_password must be between 1 and 41 characters
      - allowed_pattern: '[a-zA-Z0-9]*'
        description: db_root_password must contain only alphanumeric characters

  public_net_id:
      type: string
      description: ID of public network for which floating IP addresses will be allocated

  private_net_id:
      type: string
      description: ID of private network into which servers get deployed

  private_subnet_id:
      type: string
      description: ID of private sub network into which servers get deployed

resources:
  LoadBalancerServer:
    type: OS::Nova::Server
    depends_on: webserver_wait
    properties:
      image: { get_param: image_id }
      flavor: { get_param: instance_type }
      key_name: { get_param: key_name }
      networks:
          - port: { get_resource: LoadBalancerServer_port }
      user_data:
        str_replace:
          template: |
            #!/bin/bash -v

            tee -a /etc/default/locale <<EOF
            LANGUAGE="en_US.UTF8"
            LC_ALL="en_US.UTF8"
            LC_CTYPE="en_US.UTF8"
            EOF

            export LANGUAGE="en_US.UTF8"
            export LC_ALL="en_US.UTF8"
            export LC_CTYPE="en_US.UTF8"

            apt-get update
            apt-get -y upgrade
            apt-get -y install haproxy

            tee -a /etc/haproxy/haproxy.cfg <<EOF
            listen webserver
              bind 0.0.0.0:80
              mode http
              stats enable
              stats uri /haproxy?stats
              balance roundrobin
              option httpclose
              option forwardfor
              server apache1 web_1_ipaddr check
              server apache2 web_2_ipaddr check
              server apache3 web_3_ipaddr check
            EOF

            tee -a /etc/default/haproxy <<EOF
            ENABLED=1
            EOF

            service haproxy start

            wc_notify --data-binary '{"status": "SUCCESS"}'
          params:
            web_1_ipaddr: { get_attr: [WebServer_1, networks, private, 0] }
            web_2_ipaddr: { get_attr: [WebServer_2, networks, private, 0] }
            web_3_ipaddr: { get_attr: [WebServer_3, networks, private, 0] }
            wc_notify: { get_attr: ['lbserver_wait_handle', 'curl_cli'] }

  lbserver_wait: 
    type: "OS::Heat::WaitCondition"
    depends_on: webserver_wait
    properties: 
      handle: 
        get_resource: lbserver_wait_handle
      timeout: 1000

  lbserver_wait_handle: 
    type: "OS::Heat::WaitConditionHandle"      

  LoadBalancerServer_port:
      type: OS::Neutron::Port
      properties:
          network_id : { get_param: private_net_id }
          fixed_ips:
              - subnet_id: { get_param: private_subnet_id }
          security_groups: [{get_resource: WebServer_security_group }]

  DatabaseServer:
    type: OS::Nova::Server
    properties:
      image: { get_param: image_id }
      flavor: { get_param: instance_type }
      key_name: { get_param: key_name }
      networks:
          - port: { get_resource: DatabaseServer_port }
      user_data:
        str_replace:
          template: |
            #!/bin/bash -v

            tee -a /etc/default/locale <<EOF
            LANGUAGE="en_US.UTF8"
            LC_ALL="en_US.UTF8"
            LC_CTYPE="en_US.UTF8"
            EOF

            export LANGUAGE="en_US.UTF8"
            export LC_ALL="en_US.UTF8"
            export LC_CTYPE="en_US.UTF8"

            apt-get update
            apt-get -y upgrade
            apt-get -y install mariadb-server

            tee -a /etc/mysql/my.cnf <<EOF

            [mysqld]
            bind-address = 0.0.0.0
            EOF

            # I know this looks stupid, but MariaDB just doesn't detect the changed my.cnf unless it's done this way.
            # It must be run first and restarted again.
            service mysql start
            service mysql restart

            # touch /var/log/mariadb/mariadb.log
            # chown mysql.mysql /var/log/mariadb/mariadb.log

            # Setup MySQL root password and create a user
            mysqladmin -u root password db_rootpassword
            cat << EOF | mysql -u root --password=db_rootpassword
            CREATE DATABASE db_name;
            GRANT ALL PRIVILEGES ON db_name.* TO "db_user"@"%"
            IDENTIFIED BY "db_password";
            FLUSH PRIVILEGES;
            EXIT
            EOF

          params:
            db_rootpassword: { get_param: db_root_password }
            db_name: { get_param: db_name }
            db_user: { get_param: db_username }
            db_password: { get_param: db_password }

  DatabaseServer_port:
      type: OS::Neutron::Port
      properties:
          network_id : { get_param: private_net_id }
          fixed_ips:
              - subnet_id: { get_param: private_subnet_id }
          security_groups: [{get_resource: DatabaseServer_security_group }]

  DatabaseServer_security_group:
      type: OS::Neutron::SecurityGroup
      properties:
          description: Add security group rules for DatabaseServer
          name: security-group-db
          rules:
            - remote_ip_prefix: 0.0.0.0/0
              protocol: tcp
              port_range_min: 22
              port_range_max: 22
            - remote_ip_prefix: 0.0.0.0/0
              protocol: icmp
            - remote_ip_prefix: 0.0.0.0/0
              protocol: tcp
              port_range_min: 3306
              port_range_max: 3306

  WebServer_1:
    type: OS::Nova::Server
    properties:
      image: { get_param: image_id }
      flavor: { get_param: instance_type }
      key_name: { get_param: key_name }
      networks:
          - port: { get_resource: WebServer_port_1 }
      user_data:
        str_replace:
          template: |
            #!/bin/bash -v

            tee -a /etc/default/locale <<EOF
            LANGUAGE="en_US.UTF8"
            LC_ALL="en_US.UTF8"
            LC_CTYPE="en_US.UTF8"
            EOF

            export LANGUAGE="en_US.UTF8"
            export LC_ALL="en_US.UTF8"
            export LC_CTYPE="en_US.UTF8"

            apt-get update

            apt-get -y install apache2 wordpress

            tee /etc/apache2/sites-available/wordpress.conf <<EOF
            Alias /wordpress /usr/share/wordpress

            # Access is only allowed via local access
            # Change this once configured

            <Directory /usr/share/wordpress>
              AllowOverride Options
              <IfModule mod_authz_core.c>
                # Apache 2.4
                Require all granted
              </IfModule>
              <IfModule !mod_authz_core.c>
                # Apache 2.2
                Order Deny,Allow
                Allow from 127.0.0.1
                Allow from ::1
             </IfModule>
            </Directory>

            <Directory /usr/share/wordpress/wp-content/uploads>
              # Deny access to any php file in the uploads directory
              <FilesMatch "\.(php)$">
                Order Deny,Allow
                Deny from all
              </FilesMatch>
            </Directory>

            <Directory /usr/share/wordpress/wp-content/plugins/akismet>
              # Deny access to any php file in the akismet directory
              <FilesMatch "\.(php|txt)$">
                Order Deny,Allow
                Deny from all
              </FilesMatch>
            </Directory>
            EOF

            sed -i "/Deny from All/d" /etc/apache2/sites-available/wordpress.conf
            sed -i "s/Require local/Require all granted/" /etc/apache2/sites-available/wordpress.conf

            tee -a /etc/wordpress/config-web_ipaddr.php <<EOF
            <?php
            /**
             * The base configuration for WordPress
             *
             * The wp-config.php creation script uses this file during the
             * installation. You don't have to use the web site, you can
             * copy this file to "wp-config.php" and fill in the values.
             *
             * This file contains the following configurations:
             *
             * * MySQL settings
             * * Secret keys
             * * Database table prefix
             * * ABSPATH
             *
             * @link https://codex.wordpress.org/Editing_wp-config.php
             *
             * @package WordPress
             */

            // ** MySQL settings - You can get this info from your web host ** //
            /** The name of the database for WordPress */
            define('DB_NAME', 'database_name_here');

            /** MySQL database username */
            define('DB_USER', 'username_here');

            /** MySQL database password */
            define('DB_PASSWORD', 'password_here');

            /** MySQL hostname */
            define('DB_HOST', 'localhost');

            /** Database Charset to use in creating database tables. */
            define('DB_CHARSET', 'utf8');

            /** The Database Collate type. Don't change this if in doubt. */
            define('DB_COLLATE', '');

            /**#@+
             * Authentication Unique Keys and Salts.
             *
             * Change these to different unique phrases!
             * You can generate these using the {@link https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org secret-key service}
             * You can change these at any point in time to invalidate all existing cookies. This will force all users to have to log in again.
             *
             * @since 2.6.0
             */
            define('AUTH_KEY',         'put your unique phrase here');
            define('SECURE_AUTH_KEY',  'put your unique phrase here');
            define('LOGGED_IN_KEY',    'put your unique phrase here');
            define('NONCE_KEY',        'put your unique phrase here');
            define('AUTH_SALT',        'put your unique phrase here');
            define('SECURE_AUTH_SALT', 'put your unique phrase here');
            define('LOGGED_IN_SALT',   'put your unique phrase here');
            define('NONCE_SALT',       'put your unique phrase here');

            /**#@-*/

            /**
             * WordPress Database Table prefix.
             *
             * You can have multiple installations in one database if you give each
             * a unique prefix. Only numbers, letters, and underscores please!
             */
            \$table_prefix  = 'wp_';

            /**
             * See http://make.wordpress.org/core/2013/10/25/the-definitive-guide-to-disabling-auto-updates-in-wordpress-3-7
             */

            /* Disable all file change, as RPM base installation are read-only */
            define('DISALLOW_FILE_MODS', true);

            /* Disable automatic updater, in case you want to allow
               above FILE_MODS for plugins, themes, ... */
            define('AUTOMATIC_UPDATER_DISABLED', true);

            /* Core update is always disabled, WP_AUTO_UPDATE_CORE value is ignore */

            /**
             * For developers: WordPress debugging mode.
             *
             * Change this to true to enable the display of notices during development.
             * It is strongly recommended that plugin and theme developers use WP_DEBUG
             * in their development environments.
             *
             * For information on other constants that can be used for debugging,
             * visit the Codex.
             *
             * @link https://codex.wordpress.org/Debugging_in_WordPress
             */
            define('WP_DEBUG', false);

            /* That's all, stop editing! Happy blogging. */

            /** Absolute path to the WordPress directory. */
            if ( !defined('ABSPATH') )
              define('ABSPATH', '/usr/share/wordpress');

            /** Sets up WordPress vars and included files. */
            require_once(ABSPATH . 'wp-settings.php');
            EOF

            sed -i s/database_name_here/db_name/ /etc/wordpress/config-web_ipaddr.php
            sed -i s/username_here/db_user/      /etc/wordpress/config-web_ipaddr.php
            sed -i s/password_here/db_password/  /etc/wordpress/config-web_ipaddr.php
            sed -i s/localhost/db_ipaddr/        /etc/wordpress/config-web_ipaddr.php

            # setenforce 0 # Otherwise net traffic with DB is disabled

            service apache2 start
            a2ensite wordpress.conf
            service apache2 restart

            wc_notify --data-binary '{"status": "SUCCESS"}'
          params:
            db_rootpassword: { get_param: db_root_password }
            db_name: { get_param: db_name }
            db_user: { get_param: db_username }
            db_password: { get_param: db_password }
            db_ipaddr: { get_attr: [DatabaseServer, networks, private, 0] }
            web_ipaddr: { get_attr: [WebServer_floating_ip, floating_ip_address] }
            wc_notify: { get_attr: ['webserver_wait_handle', 'curl_cli'] }

  WebServer_port_1:
      type: OS::Neutron::Port
      properties:
          network_id : { get_param: private_net_id }
          fixed_ips:
              - subnet_id: { get_param: private_subnet_id }
          security_groups: [{get_resource: WebServer_security_group }]

  WebServer_2:
    type: OS::Nova::Server
    properties:
      image: { get_param: image_id }
      flavor: { get_param: instance_type }
      key_name: { get_param: key_name }
      networks:
          - port: { get_resource: WebServer_port_2 }
      user_data:
        str_replace:
          template: |
            #!/bin/bash -v

            tee -a /etc/default/locale <<EOF
            LANGUAGE="en_US.UTF8"
            LC_ALL="en_US.UTF8"
            LC_CTYPE="en_US.UTF8"
            EOF

            export LANGUAGE="en_US.UTF8"
            export LC_ALL="en_US.UTF8"
            export LC_CTYPE="en_US.UTF8"

            apt-get update
            apt-get -y upgrade

            apt-get -y install apache2 wordpress

            tee /etc/apache2/sites-available/wordpress.conf <<EOF
            Alias /wordpress /usr/share/wordpress

            # Access is only allowed via local access
            # Change this once configured

            <Directory /usr/share/wordpress>
              AllowOverride Options
              <IfModule mod_authz_core.c>
                # Apache 2.4
                Require all granted
              </IfModule>
              <IfModule !mod_authz_core.c>
                # Apache 2.2
                Order Deny,Allow
                Allow from 127.0.0.1
                Allow from ::1
             </IfModule>
            </Directory>

            <Directory /usr/share/wordpress/wp-content/uploads>
              # Deny access to any php file in the uploads directory
              <FilesMatch "\.(php)$">
                Order Deny,Allow
                Deny from all
              </FilesMatch>
            </Directory>

            <Directory /usr/share/wordpress/wp-content/plugins/akismet>
              # Deny access to any php file in the akismet directory
              <FilesMatch "\.(php|txt)$">
                Order Deny,Allow
                Deny from all
              </FilesMatch>
            </Directory>
            EOF

            sed -i "/Deny from All/d" /etc/apache2/sites-available/wordpress.conf
            sed -i "s/Require local/Require all granted/" /etc/apache2/sites-available/wordpress.conf

            tee -a /etc/wordpress/config-web_ipaddr.php <<EOF
            <?php
            /**
             * The base configuration for WordPress
             *
             * The wp-config.php creation script uses this file during the
             * installation. You don't have to use the web site, you can
             * copy this file to "wp-config.php" and fill in the values.
             *
             * This file contains the following configurations:
             *
             * * MySQL settings
             * * Secret keys
             * * Database table prefix
             * * ABSPATH
             *
             * @link https://codex.wordpress.org/Editing_wp-config.php
             *
             * @package WordPress
             */

            // ** MySQL settings - You can get this info from your web host ** //
            /** The name of the database for WordPress */
            define('DB_NAME', 'database_name_here');

            /** MySQL database username */
            define('DB_USER', 'username_here');

            /** MySQL database password */
            define('DB_PASSWORD', 'password_here');

            /** MySQL hostname */
            define('DB_HOST', 'localhost');

            /** Database Charset to use in creating database tables. */
            define('DB_CHARSET', 'utf8');

            /** The Database Collate type. Don't change this if in doubt. */
            define('DB_COLLATE', '');

            /**#@+
             * Authentication Unique Keys and Salts.
             *
             * Change these to different unique phrases!
             * You can generate these using the {@link https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org secret-key service}
             * You can change these at any point in time to invalidate all existing cookies. This will force all users to have to log in again.
             *
             * @since 2.6.0
             */
            define('AUTH_KEY',         'put your unique phrase here');
            define('SECURE_AUTH_KEY',  'put your unique phrase here');
            define('LOGGED_IN_KEY',    'put your unique phrase here');
            define('NONCE_KEY',        'put your unique phrase here');
            define('AUTH_SALT',        'put your unique phrase here');
            define('SECURE_AUTH_SALT', 'put your unique phrase here');
            define('LOGGED_IN_SALT',   'put your unique phrase here');
            define('NONCE_SALT',       'put your unique phrase here');

            /**#@-*/

            /**
             * WordPress Database Table prefix.
             *
             * You can have multiple installations in one database if you give each
             * a unique prefix. Only numbers, letters, and underscores please!
             */
            \$table_prefix  = 'wp_';

            /**
             * See http://make.wordpress.org/core/2013/10/25/the-definitive-guide-to-disabling-auto-updates-in-wordpress-3-7
             */

            /* Disable all file change, as RPM base installation are read-only */
            define('DISALLOW_FILE_MODS', true);

            /* Disable automatic updater, in case you want to allow
               above FILE_MODS for plugins, themes, ... */
            define('AUTOMATIC_UPDATER_DISABLED', true);

            /* Core update is always disabled, WP_AUTO_UPDATE_CORE value is ignore */

            /**
             * For developers: WordPress debugging mode.
             *
             * Change this to true to enable the display of notices during development.
             * It is strongly recommended that plugin and theme developers use WP_DEBUG
             * in their development environments.
             *
             * For information on other constants that can be used for debugging,
             * visit the Codex.
             *
             * @link https://codex.wordpress.org/Debugging_in_WordPress
             */
            define('WP_DEBUG', false);

            /* That's all, stop editing! Happy blogging. */

            /** Absolute path to the WordPress directory. */
            if ( !defined('ABSPATH') )
              define('ABSPATH', '/usr/share/wordpress');

            /** Sets up WordPress vars and included files. */
            require_once(ABSPATH . 'wp-settings.php');
            EOF

            sed -i s/database_name_here/db_name/ /etc/wordpress/config-web_ipaddr.php
            sed -i s/username_here/db_user/      /etc/wordpress/config-web_ipaddr.php
            sed -i s/password_here/db_password/  /etc/wordpress/config-web_ipaddr.php
            sed -i s/localhost/db_ipaddr/        /etc/wordpress/config-web_ipaddr.php

            # setenforce 0 # Otherwise net traffic with DB is disabled

            service apache2 start
            a2ensite wordpress.conf
            service apache2 restart

            wc_notify --data-binary '{"status": "SUCCESS"}'
          params:
            db_rootpassword: { get_param: db_root_password }
            db_name: { get_param: db_name }
            db_user: { get_param: db_username }
            db_password: { get_param: db_password }
            db_ipaddr: { get_attr: [DatabaseServer, networks, private, 0] }
            web_ipaddr: { get_attr: [WebServer_floating_ip, floating_ip_address] }
            wc_notify: { get_attr: ['webserver_wait_handle', 'curl_cli'] }

  WebServer_port_2:
      type: OS::Neutron::Port
      properties:
          network_id : { get_param: private_net_id }
          fixed_ips:
              - subnet_id: { get_param: private_subnet_id }
          security_groups: [{get_resource: WebServer_security_group }]

  WebServer_3:
    type: OS::Nova::Server
    properties:
      image: { get_param: image_id }
      flavor: { get_param: instance_type }
      key_name: { get_param: key_name }
      networks:
          - port: { get_resource: WebServer_port_3 }
      user_data:
        str_replace:
          template: |
            #!/bin/bash -v

            tee -a /etc/default/locale <<EOF
            LANGUAGE="en_US.UTF8"
            LC_ALL="en_US.UTF8"
            LC_CTYPE="en_US.UTF8"
            EOF

            export LANGUAGE="en_US.UTF8"
            export LC_ALL="en_US.UTF8"
            export LC_CTYPE="en_US.UTF8"

            apt-get update
            apt-get -y upgrade

            apt-get -y install apache2 wordpress

            tee /etc/apache2/sites-available/wordpress.conf <<EOF
            Alias /wordpress /usr/share/wordpress

            # Access is only allowed via local access
            # Change this once configured

            <Directory /usr/share/wordpress>
              AllowOverride Options
              <IfModule mod_authz_core.c>
                # Apache 2.4
                Require all granted
              </IfModule>
              <IfModule !mod_authz_core.c>
                # Apache 2.2
                Order Deny,Allow
                Allow from 127.0.0.1
                Allow from ::1
             </IfModule>
            </Directory>

            <Directory /usr/share/wordpress/wp-content/uploads>
              # Deny access to any php file in the uploads directory
              <FilesMatch "\.(php)$">
                Order Deny,Allow
                Deny from all
              </FilesMatch>
            </Directory>

            <Directory /usr/share/wordpress/wp-content/plugins/akismet>
              # Deny access to any php file in the akismet directory
              <FilesMatch "\.(php|txt)$">
                Order Deny,Allow
                Deny from all
              </FilesMatch>
            </Directory>
            EOF

            sed -i "/Deny from All/d" /etc/apache2/sites-available/wordpress.conf
            sed -i "s/Require local/Require all granted/" /etc/apache2/sites-available/wordpress.conf

            tee -a /etc/wordpress/config-web_ipaddr.php <<EOF
            <?php
            /**
             * The base configuration for WordPress
             *
             * The wp-config.php creation script uses this file during the
             * installation. You don't have to use the web site, you can
             * copy this file to "wp-config.php" and fill in the values.
             *
             * This file contains the following configurations:
             *
             * * MySQL settings
             * * Secret keys
             * * Database table prefix
             * * ABSPATH
             *
             * @link https://codex.wordpress.org/Editing_wp-config.php
             *
             * @package WordPress
             */

            // ** MySQL settings - You can get this info from your web host ** //
            /** The name of the database for WordPress */
            define('DB_NAME', 'database_name_here');

            /** MySQL database username */
            define('DB_USER', 'username_here');

            /** MySQL database password */
            define('DB_PASSWORD', 'password_here');

            /** MySQL hostname */
            define('DB_HOST', 'localhost');

            /** Database Charset to use in creating database tables. */
            define('DB_CHARSET', 'utf8');

            /** The Database Collate type. Don't change this if in doubt. */
            define('DB_COLLATE', '');

            /**#@+
             * Authentication Unique Keys and Salts.
             *
             * Change these to different unique phrases!
             * You can generate these using the {@link https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org secret-key service}
             * You can change these at any point in time to invalidate all existing cookies. This will force all users to have to log in again.
             *
             * @since 2.6.0
             */
            define('AUTH_KEY',         'put your unique phrase here');
            define('SECURE_AUTH_KEY',  'put your unique phrase here');
            define('LOGGED_IN_KEY',    'put your unique phrase here');
            define('NONCE_KEY',        'put your unique phrase here');
            define('AUTH_SALT',        'put your unique phrase here');
            define('SECURE_AUTH_SALT', 'put your unique phrase here');
            define('LOGGED_IN_SALT',   'put your unique phrase here');
            define('NONCE_SALT',       'put your unique phrase here');

            /**#@-*/

            /**
             * WordPress Database Table prefix.
             *
             * You can have multiple installations in one database if you give each
             * a unique prefix. Only numbers, letters, and underscores please!
             */
            \$table_prefix  = 'wp_';

            /**
             * See http://make.wordpress.org/core/2013/10/25/the-definitive-guide-to-disabling-auto-updates-in-wordpress-3-7
             */

            /* Disable all file change, as RPM base installation are read-only */
            define('DISALLOW_FILE_MODS', true);

            /* Disable automatic updater, in case you want to allow
               above FILE_MODS for plugins, themes, ... */
            define('AUTOMATIC_UPDATER_DISABLED', true);

            /* Core update is always disabled, WP_AUTO_UPDATE_CORE value is ignore */

            /**
             * For developers: WordPress debugging mode.
             *
             * Change this to true to enable the display of notices during development.
             * It is strongly recommended that plugin and theme developers use WP_DEBUG
             * in their development environments.
             *
             * For information on other constants that can be used for debugging,
             * visit the Codex.
             *
             * @link https://codex.wordpress.org/Debugging_in_WordPress
             */
            define('WP_DEBUG', false);

            /* That's all, stop editing! Happy blogging. */

            /** Absolute path to the WordPress directory. */
            if ( !defined('ABSPATH') )
              define('ABSPATH', '/usr/share/wordpress');

            /** Sets up WordPress vars and included files. */
            require_once(ABSPATH . 'wp-settings.php');
            EOF

            sed -i s/database_name_here/db_name/ /etc/wordpress/config-web_ipaddr.php
            sed -i s/username_here/db_user/      /etc/wordpress/config-web_ipaddr.php
            sed -i s/password_here/db_password/  /etc/wordpress/config-web_ipaddr.php
            sed -i s/localhost/db_ipaddr/        /etc/wordpress/config-web_ipaddr.php

            # setenforce 0 # Otherwise net traffic with DB is disabled

            service apache2 start
            a2ensite wordpress.conf
            service apache2 restart

            wc_notify --data-binary '{"status": "SUCCESS"}'
          params:
            db_rootpassword: { get_param: db_root_password }
            db_name: { get_param: db_name }
            db_user: { get_param: db_username }
            db_password: { get_param: db_password }
            db_ipaddr: { get_attr: [DatabaseServer, networks, private, 0] }
            web_ipaddr: { get_attr: [WebServer_floating_ip, floating_ip_address] }
            wc_notify: { get_attr: ['webserver_wait_handle', 'curl_cli'] }

  webserver_wait: 
    type: "OS::Heat::WaitCondition"
    properties: 
      handle: 
        get_resource: webserver_wait_handle
      timeout: 1000
      count: 3

  webserver_wait_handle: 
    type: "OS::Heat::WaitConditionHandle"      

  WebServer_port_3:
      type: OS::Neutron::Port
      properties:
          network_id : { get_param: private_net_id }
          fixed_ips:
              - subnet_id: { get_param: private_subnet_id }
          security_groups: [{get_resource: WebServer_security_group }]

  WebServer_floating_ip:
      type: OS::Neutron::FloatingIP
      properties:
        floating_network_id: { get_param: public_net_id }
        port_id: { get_resource: LoadBalancerServer_port }

  WebServer_security_group:
      type: OS::Neutron::SecurityGroup
      properties:
          description: Add security group rules for WebServer
          name: security-group-web
          rules:
            - remote_ip_prefix: 0.0.0.0/0
              protocol: tcp
              port_range_min: 22
              port_range_max: 22
            - remote_ip_prefix: 0.0.0.0/0
              protocol: icmp
            - remote_ip_prefix: 0.0.0.0/0
              protocol: tcp
              port_range_min: 80
              port_range_max: 80

outputs:
  WebsiteURL:
    description: URL for Wordpress wiki
    value:
      str_replace:
        template: http://host/wordpress
        params:
          host: { get_attr: [WebServer_floating_ip, floating_ip_address] }

